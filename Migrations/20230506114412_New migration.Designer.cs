// <auto-generated />
using System;
using AvanceradDotNet_Labb4.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvanceradDotNet_Labb4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230506114412_New migration")]
    partial class Newmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvanceradDotNet_Labb4.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            Description = "Att åka på vågor med en bräda.",
                            Title = "Surf"
                        },
                        new
                        {
                            InterestId = 2,
                            Description = "Springer runt med en kamera runt halsen.",
                            Title = "Fotografering"
                        },
                        new
                        {
                            InterestId = 3,
                            Description = "Plinka på ett piano eller en gitarr typ.",
                            Title = "Musik"
                        },
                        new
                        {
                            InterestId = 4,
                            Description = "Programmering i Unity.",
                            Title = "Spelutveckling"
                        });
                });

            modelBuilder.Entity("AvanceradDotNet_Labb4.Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"));

                    b.Property<int?>("InterestId")
                        .HasColumnType("int");

                    b.Property<string>("LinkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("LinkId");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkName = "Surf.se",
                            LinkUrl = "https://www.surf.se/"
                        },
                        new
                        {
                            LinkId = 2,
                            LinkName = "Kamera & Bild",
                            LinkUrl = "https://www.kamerabild.se/fotoskolor/fotografering"
                        },
                        new
                        {
                            LinkId = 3,
                            LinkName = "Musiksidan",
                            LinkUrl = "https://www.musiksidan.nu/"
                        },
                        new
                        {
                            LinkId = 4,
                            LinkName = "Unity Homepage",
                            LinkUrl = "https://unity.com/"
                        },
                        new
                        {
                            LinkId = 5,
                            LinkName = "Surfskolan",
                            LinkUrl = "https://surfskolan.se/"
                        },
                        new
                        {
                            LinkId = 6,
                            LinkName = "Fotosidan",
                            LinkUrl = "https://www.fotosidan.se/"
                        });
                });

            modelBuilder.Entity("AvanceradDotNet_Labb4.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Sven Svensson",
                            Phone = "0743524435"
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Klara Larsson",
                            Phone = "0774563455"
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Janne Josefsson",
                            Phone = "0797534262"
                        });
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.Property<int>("InterestsInterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonsPersonId")
                        .HasColumnType("int");

                    b.HasKey("InterestsInterestId", "PersonsPersonId");

                    b.HasIndex("PersonsPersonId");

                    b.ToTable("InterestPerson");
                });

            modelBuilder.Entity("AvanceradDotNet_Labb4.Models.Link", b =>
                {
                    b.HasOne("AvanceradDotNet_Labb4.Models.Interest", "Interest")
                        .WithMany("Links")
                        .HasForeignKey("InterestId");

                    b.HasOne("AvanceradDotNet_Labb4.Models.Person", "Person")
                        .WithMany("Links")
                        .HasForeignKey("PersonId");

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.HasOne("AvanceradDotNet_Labb4.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanceradDotNet_Labb4.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AvanceradDotNet_Labb4.Models.Interest", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("AvanceradDotNet_Labb4.Models.Person", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
